@using VirtualTrainer.Authorization
@model PaginatedList<VirtualTrainer.Equipment>

@{
    ViewData["Title"] = "Index";
}

<h1 style='text-align:center; margin:2rem 0'>Fitness Equipment</h1>

@{
    if(User.IsInRole(Constants.ContactAdministratorsRole))
    {
        <p>
        <a asp-action="Create">Add a new equipment</a>
        </p>
    }
}

<form asp-action="Index" method="get">
    <div class="table__search">
        <p>
            Find by name: <input class="table__input" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Barbell"/>
            <input class="table__btn" type="submit" value="Search" />
            <br/>
            <a style='color:black;' asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table__container">
    <thead class='table__head'>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Equipment Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StockSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Stock</a>
            </th>
            <th>
                Other
            </th>
            <th></th>
        </tr>
    </thead>
    @{
        if (!User.IsInRole(Constants.ContactAdministratorsRole) && !User.IsInRole(Constants.ContactManagersRole))
        {
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class='table__row'>
                        <td>
                            @Html.DisplayFor(modelItem => item.EquipmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Details)
                        </td>
                        <td>
                            <a style='color:#03fcb1' asp-action="Details" asp-route-id="@item.Idequipment">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        }
        else if (User.IsInRole(Constants.ContactAdministratorsRole))
        {
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class='table__row'>
                        <td>
                            @Html.DisplayFor(modelItem => item.EquipmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Details)
                        </td>
                        <td>
                            <a style='color:#03fcb1' asp-action="Edit" asp-route-id="@item.Idequipment">Edit</a> |
                            <a style='color:#03fcb1' asp-action="Details" asp-route-id="@item.Idequipment">Details</a> |
                            <a style='color:#03fcb1' asp-action="Delete" asp-route-id="@item.Idequipment">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        }
        else
        {
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class='table__row'>
                        <td>
                            @Html.DisplayFor(modelItem => item.EquipmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Details)
                        </td>
                        <td>
                        </td>
                    </tr>
                }
            </tbody>
        }
    }
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
