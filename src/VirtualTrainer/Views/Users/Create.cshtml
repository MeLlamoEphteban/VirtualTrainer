@model VirtualTrainer.Models.ViewModels.UserViewModelAdd

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Surname" class="control-label"></label>
                <input asp-for="Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cnp" class="control-label">CNP</label>
                <input asp-for="Cnp" class="form-control" />
                <span asp-validation-for="Cnp" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label">Password</label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Idsubscription" class="control-label">Subscription name</label>
                <br />
                @Html.DropDownListFor(it => it.Idsubscription, (SelectListItem[])ViewBag.SubscriptionID)
                <span asp-validation-for="Idsubscription" class="text-danger" />
            </div>
            <div class="form-group">
                <label asp-for="startDate" class="control-label">Start Date</label>
                <input asp-for="startDate" class="form-control" />
                <span asp-validation-for="startDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="button" onclick="return generatePass()">Generate Password</button>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
   <script>

  // const button = document
  //.querySelector('.generate-pass')
  //.addEventListener('click', generatePass);

//const display = document.querySelector('.show-pass');

function generatePass() {
  let passLength = 8;
  let pass = 0;
  let chars =
    '0123456789abcdefghijklmnopqrstuvwxyz!#$%^&*ABCDEFGHIJKLMNOPQRSTUVWXYZ';

  for (let i = 0; i <= passLength; i++) {
    let randomNumber = Math.floor(Math.random() * chars.length);
    pass += chars.substring(randomNumber, randomNumber + 1);
  }
  var Password = document.getElementById("Password");
  Password.value = pass;
  return false;
}
   </script>
}
